name: CI for Skopos

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Get Commit Author
      id: author
      run: |
        echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT

    - name: Stop if commit was made by github-actions
      if: steps.author.outputs.author == 'github-actions[bot]'
      run: |
        echo "Commit was made by github-actions[bot], skipping..."
        exit 0


    - name: SKOPOS Checkout code
      uses: actions/checkout@v4

    - name: SKOPOS Set up JDK 
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin' 
        cache: 'maven'

    - name: SKOPOS Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: SKOPOS Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /var/lib/docker
        key: docker-cache-${{ runner.os }}-${{ github.ref }}
        restore-keys: |
          docker-cache-${{ runner.os }}-

    - name: SKOPOS Enable Testcontainers Reuse
      run: echo "testcontainers.reuse.enable=true" > ~/.testcontainers.properties

    - name: SKOPOS Run tests with Maven
      run: mvn package

    - name: SKOPOS Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: target/

    - name: SKOPOS Upload Dockerfiles
      uses: actions/upload-artifact@v4
      with:
        name: dockerfiles
        path: src/main/docker/

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:

    - name: Get Commit Author
      id: author
      run: |
        echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT

    - name: Stop if commit was made by github-actions
      if: steps.author.outputs.author == 'github-actions[bot]'
      run: |
        echo "Commit was made by github-actions[bot], skipping..."
        exit 0

    - name: SKOPOS Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: target

    - name: SKOPOS Download Dockerfiles
      uses: actions/download-artifact@v4
      with:
        name: dockerfiles
        path: src/main/docker

    - name: SKOPOS Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: SKOPOS Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Set image tag from commit SHA
      run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: SKOPOS Build and push Docker image
      run: |
        docker build -f src/main/docker/Dockerfile.jvm -t ghcr.io/${REPO}/skopos:${IMAGE_TAG} .
        docker push ghcr.io/${REPO}/skopos:${IMAGE_TAG}

  update-tag:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:

      - name: Get Commit Author
        id: author
        run: |
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT

      - name: Stop if commit was made by github-actions
        if: steps.author.outputs.author == 'github-actions[bot]'
        run: |
          echo "Commit was made by github-actions[bot], skipping..."
          exit 0

      - name: Set image tag from commit SHA
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: copy radar-deploy.yaml
        run: |
          cp operations/radar-deploy.yaml.tmpl operations/radar-deploy.yaml

      - name: Replace IMAGE_TAG in deployment file
        run: |
          echo "Replacing \${IMAGE_TAG} with ${IMAGE_TAG}"
          sed -i "s|\${IMAGE_TAG}|${IMAGE_TAG}|g" operations/radar-deploy.yaml

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add operations/radar-deploy.yaml
          git commit -m "ci: Update image tag to ${IMAGE_TAG}"
          git push