kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: radar.sobrado.ch
  namespace: sobrado-radar
  uid: 3fd49072-6563-49fa-9c69-0dfca7ecde88
  resourceVersion: '535159145'
  generation: 1
  creationTimestamp: '2022-05-12T08:13:43Z'
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"cert-manager.io/cluster-issuer":"letsencrypt-production"},"name":"radar.sobrado.ch","namespace":"sobrado-radar"},"spec":{"rules":[{"host":"radar.sobrado.ch","http":{"paths":[{"backend":{"service":{"name":"radar","port":{"number":8080}}},"path":"/","pathType":"Prefix"}]}}],"tls":[{"hosts":["radar.sobrado.ch"],"secretName":"radar.sobrado.ch"}]}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2022-05-12T08:13:43Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:cert-manager.io/cluster-issuer': {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:spec':
          'f:rules': {}
          'f:tls': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2022-05-12T08:14:37Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:loadBalancer':
            'f:ingress': {}
      subresource: status
spec:
  tls:
    - hosts:
        - radar.sobrado.ch
      secretName: radar.sobrado.ch
  rules:
    - host: radar.sobrado.ch
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: radar
                port:
                  number: 8080
status:
  loadBalancer:
    ingress:
      - hostname: router-default.apps.cloudscale-lpg-2.appuio.cloud